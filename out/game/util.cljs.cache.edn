;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name game.util, :imports nil, :requires nil, :uses nil, :defs {relation {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 45, :column 7, :end-line 45, :end-column 15, :arglists (quote ([rect]))}, :name game.util/relation, :variadic false, :file "src\\game\\util.cljs", :end-column 15, :method-params ([rect]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rect])), :test true}, v- {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 33, :column 7, :end-line 33, :end-column 9, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name game.util/v-, :variadic true, :file "src\\game\\util.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, clear-rect {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([ctx x y w h]))}, :name game.util/clear-rect, :variadic false, :file "src\\game\\util.cljs", :end-column 17, :method-params ([ctx x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x y w h])), :test true}, redop {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 29, :column 8, :end-line 29, :end-column 13, :private true, :arglists (quote ([op col]))}, :private true, :name game.util/redop, :variadic false, :file "src\\game\\util.cljs", :end-column 13, :method-params ([op col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([op col])), :test true}, vdiv {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name game.util/vdiv, :variadic true, :file "src\\game\\util.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, append-child {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 8, :column 7, :end-line 8, :end-column 19, :arglists (quote ([el node]))}, :name game.util/append-child, :variadic false, :file "src\\game\\util.cljs", :end-column 19, :method-params ([el node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el node])), :test true}, animation-frame {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 5, :column 7, :end-line 5, :end-column 22, :arglists (quote ([f]))}, :name game.util/animation-frame, :variadic false, :file "src\\game\\util.cljs", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, v* {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 34, :column 7, :end-line 34, :end-column 9, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name game.util/v*, :variadic true, :file "src\\game\\util.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, v+ {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 32, :column 7, :end-line 32, :end-column 9, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name game.util/v+, :variadic true, :file "src\\game\\util.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, operate {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 22, :column 8, :end-line 22, :end-column 15, :private true, :arglists (quote ([op a -b]))}, :private true, :name game.util/operate, :variadic false, :file "src\\game\\util.cljs", :end-column 15, :method-params ([op a -b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([op a -b])), :test true}, fill-style {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([ctx color]))}, :name game.util/fill-style, :variadic false, :file "src\\game\\util.cljs", :end-column 17, :method-params ([ctx color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx color])), :test true}, fill-rect {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([ctx x y w h]))}, :name game.util/fill-rect, :variadic false, :file "src\\game\\util.cljs", :end-column 16, :method-params ([ctx x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x y w h])), :test true}, intersect {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\game\\util.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([[ax ay aw ah] [bx by bw bh]]))}, :name game.util/intersect, :variadic false, :file "src\\game\\util.cljs", :end-column 16, :method-params ([p__123 p__124]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[ax ay aw ah] [bx by bw bh]])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:inside :else :right :above :below :outside :left}, :order [:else :inside :outside :right :left :above :below]}, :doc nil}