;; Analyzed by ClojureScript 0.0-3211
{:use-macros {gentype ec.macros}, :excludes #{update type}, :name ec.sys, :imports nil, :requires nil, :uses nil, :defs {prots {:name ec.sys/prots, :file "src\\ec\\sys.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :declared true, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 7, :column 10, :end-line 7, :end-column 15, :declared true}}, proto-map {:name ec.sys/proto-map, :file "src\\ec\\sys.cljs", :line 19, :column 1, :end-line 19, :end-column 15, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 19, :column 6, :end-line 19, :end-column 15}}, remove! {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 41, :column 7, :end-line 41, :end-column 14, :arglists (quote ([o k]))}, :name ec.sys/remove!, :variadic false, :file "src\\ec\\sys.cljs", :end-column 14, :method-params ([o k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o k])), :test true}, proto? {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 33, :column 7, :end-line 33, :end-column 13, :arglists (quote ([[k v]]))}, :name ec.sys/proto?, :variadic false, :file "src\\ec\\sys.cljs", :end-column 13, :method-params ([p__91]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[k v]])), :test true}, ->comp-102 {:protocol-inline nil, :meta {:protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter ec.sys/IComponent cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter cljs.core/ILookup}, :factory :positional, :arglists (quote ([_comp_])), :file nil}, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter ec.sys/IComponent cljs.core/ILookup}, :name ec.sys/->comp-102, :variadic false, :file "src\\ec\\sys.cljs", :method-params ([_comp_]), :protocol-impl nil, :arglists-meta (nil nil), :column 16, :factory :positional, :line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_comp_])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter cljs.core/ILookup}, :test true}, message {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([s o]))}, :name ec.sys/message, :variadic false, :file "src\\ec\\sys.cljs", :end-column 14, :method-params ([s o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s o])), :test true}, Entity {:num-fields 1, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name ec.sys/Entity, :file "src\\ec\\sys.cljs", :end-column 16, :type true, :column 10, :line 105, :record false, :end-line 105, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, props {:name ec.sys/props, :file "src\\ec\\sys.cljs", :line 7, :column 1, :end-line 7, :end-column 21, :declared true, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 7, :column 16, :end-line 7, :end-column 21, :declared true}}, comp-102 {:name ec.sys/comp-102, :type true, :num-fields 1, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter cljs.core/ILookup}, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter ec.sys/IComponent cljs.core/ILookup}, :file "src\\ec\\sys.cljs", :line 66, :column 16}, serialize {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 15, :column 4, :end-line 15, :end-column 13, :protocol ec.sys/IThing, :doc nil, :arglists (quote ([o]))}, :protocol ec.sys/IThing, :name ec.sys/serialize, :variadic false, :file "src\\ec\\sys.cljs", :end-column 13, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :doc nil, :test true}, comp-99 {:name ec.sys/comp-99, :type true, :num-fields 1, :record false, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter cljs.core/ILookup}, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter ec.sys/IComponent cljs.core/ILookup}, :file "src\\ec\\sys.cljs", :line 66, :column 16}, ->comp-99 {:protocol-inline nil, :meta {:protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter ec.sys/IComponent cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter cljs.core/ILookup}, :factory :positional, :arglists (quote ([_comp_])), :file nil}, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter ec.sys/IComponent cljs.core/ILookup}, :name ec.sys/->comp-99, :variadic false, :file "src\\ec\\sys.cljs", :method-params ([_comp_]), :protocol-impl nil, :arglists-meta (nil nil), :column 16, :factory :positional, :line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_comp_])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IMapEntry cljs.core/IPrintWithWriter cljs.core/ILookup}, :test true}, copy {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 17, :column 4, :end-line 17, :end-column 8, :protocol ec.sys/IThing, :doc nil, :arglists (quote ([o]))}, :protocol ec.sys/IThing, :name ec.sys/copy, :variadic false, :file "src\\ec\\sys.cljs", :end-column 8, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :doc nil, :test true}, IThing {:meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 11, :column 14, :end-line 11, :end-column 20, :doc nil, :protocol-symbol true, :protocol-info {:methods {init [[o]], update [[o]], destroy [[o]], serialize [[o]], deserialize [[o m]], copy [[o]]}}}, :protocol-symbol true, :name ec.sys/IThing, :file "src\\ec\\sys.cljs", :end-column 20, :column 1, :line 11, :protocol-info {:methods {init [[o]], update [[o]], destroy [[o]], serialize [[o]], deserialize [[o m]], copy [[o]]}}, :info nil, :end-line 11, :impls #{ec.sys/Entity ec.sys/comp-99 ec.sys/comp-102}, :doc nil, :test true}, map->compmap {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 126, :column 7, :end-line 126, :end-column 19, :arglists (quote ([[k m]]))}, :name ec.sys/map->compmap, :variadic false, :file "src\\ec\\sys.cljs", :end-column 19, :method-params ([p__105]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[k m]])), :test true}, init {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 12, :column 4, :end-line 12, :end-column 8, :protocol ec.sys/IThing, :doc nil, :arglists (quote ([o]))}, :protocol ec.sys/IThing, :name ec.sys/init, :variadic false, :file "src\\ec\\sys.cljs", :end-column 8, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :doc nil, :test true}, UID {:name ec.sys/UID, :file "src\\ec\\sys.cljs", :line 9, :column 1, :end-line 9, :end-column 13, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 9, :column 10, :end-line 9, :end-column 13}}, destroy {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 14, :column 4, :end-line 14, :end-column 11, :protocol ec.sys/IThing, :doc nil, :arglists (quote ([o]))}, :protocol ec.sys/IThing, :name ec.sys/destroy, :variadic false, :file "src\\ec\\sys.cljs", :end-column 11, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :doc nil, :test true}, update {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 13, :column 4, :end-line 13, :end-column 10, :protocol ec.sys/IThing, :doc nil, :arglists (quote ([o]))}, :protocol ec.sys/IThing, :name ec.sys/update, :variadic false, :file "src\\ec\\sys.cljs", :end-column 10, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :doc nil, :test true}, type {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 37, :column 4, :end-line 37, :end-column 8, :protocol ec.sys/IComponent, :doc nil, :arglists (quote ([o]))}, :protocol ec.sys/IComponent, :name ec.sys/type, :variadic false, :file "src\\ec\\sys.cljs", :end-column 8, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :doc nil, :test true}, C {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 59, :column 7, :end-line 59, :end-column 8, :arglists (quote ([s o]))}, :name ec.sys/C, :variadic false, :file "src\\ec\\sys.cljs", :end-column 8, :method-params ([s o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s o])), :test true}, s {:name ec.sys/s, :file "src\\ec\\sys.cljs", :line 7, :column 1, :end-line 7, :end-column 23, :declared true, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 7, :column 22, :end-line 7, :end-column 23, :declared true}}, IComponent {:meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 36, :column 3, :end-line 36, :end-column 13, :doc nil, :protocol-symbol true, :protocol-info {:methods {type [[o]]}}}, :protocol-symbol true, :name ec.sys/IComponent, :file "src\\ec\\sys.cljs", :end-column 13, :column 1, :line 35, :protocol-info {:methods {type [[o]]}}, :info nil, :end-line 36, :impls #{ec.sys/comp-99 ec.sys/comp-102}, :doc nil, :test true}, components {:name ec.sys/components, :file "src\\ec\\sys.cljs", :line 31, :column 1, :end-line 31, :end-column 20, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 31, :column 10, :end-line 31, :end-column 20}}, E {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 132, :column 7, :end-line 132, :end-column 8, :arglists (quote ([] [data])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [data]), :arglists ([] [data]), :arglists-meta (nil nil)}}, :name ec.sys/E, :variadic false, :file "src\\ec\\sys.cljs", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [data]), :arglists ([] [data]), :arglists-meta (nil nil)}, :method-params ([] [data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists ([] [data]), :test true}, install-js-hidden-get-prop {:name ec.sys/install-js-hidden-get-prop, :file "src\\ec\\sys.cljs", :line 45, :column 1, :end-line 45, :end-column 32, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 45, :column 6, :end-line 45, :end-column 32}}, ->Entity {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 105, :column 10, :end-line 105, :end-column 16, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :factory :positional, :arglists (quote ([comps]))}, :protocols #{ec.sys/IThing cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name ec.sys/->Entity, :variadic false, :file "src\\ec\\sys.cljs", :end-column 16, :method-params ([comps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comps])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :test true}, deserialize {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 16, :column 4, :end-line 16, :end-column 15, :protocol ec.sys/IThing, :doc nil, :arglists (quote ([o m]))}, :protocol ec.sys/IThing, :name ec.sys/deserialize, :variadic false, :file "src\\ec\\sys.cljs", :end-column 15, :method-params ([o m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o m])), :doc nil, :test true}, component? {:protocol-inline nil, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([o]))}, :name ec.sys/component?, :variadic false, :file "src\\ec\\sys.cljs", :end-column 17, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, reserved {:name ec.sys/reserved, :file "src\\ec\\sys.cljs", :line 27, :column 1, :end-line 27, :end-column 14, :test true, :meta {:file "C:\\Users\\jplur\\Desktop\\dev\\place-makers\\src\\ec\\sys.cljs", :line 27, :column 6, :end-line 27, :end-column 14}}}, :require-macros {ec.macros ec.macros}, :cljs.analyzer/constants {:seen #{:prots :structor :props}, :order [:props :prots :structor]}, :doc nil}